{"version":3,"file":"js/edit.af9f4d77.js","mappings":"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","sources":["webpack://gps-leaflet/./node_modules/vuetify/lib/components/VFileInput/VFileInput.mjs","webpack://gps-leaflet/./node_modules/vuetify/lib/components/VTextarea/VTextarea.mjs","webpack://gps-leaflet/./src/views/EditRoute.vue","webpack://gps-leaflet/./src/views/EditRoute.vue?d008","webpack://gps-leaflet/./node_modules/@tmcw/togeojson/dist/togeojson.cjs","webpack://gps-leaflet/./node_modules/vuetify/lib/components/VForm/VForm.mjs"],"sourcesContent":["import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VFileInput.css\";\n\n// Components\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: '$vuetify.fileInput.counterSize'\n  },\n  counterString: {\n    type: String,\n    default: '$vuetify.fileInput.counter'\n  },\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number],\n    default: false,\n    validator: v => {\n      return typeof v === 'boolean' || [1000, 1024].includes(v);\n    }\n  },\n  ...makeVInputProps({\n    prependIcon: '$file'\n  }),\n  modelValue: {\n    type: Array,\n    default: () => [],\n    validator: val => {\n      return wrapInArray(val).every(v => v != null && typeof v === 'object');\n    }\n  },\n  ...makeVFieldProps({\n    clearable: true\n  })\n}, 'VFileInput');\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: makeVFileInputProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': files => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => isFocused.value || props.active);\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onClickPrepend(e) {\n      onControlClick(e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = VInput.filterProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-file-input', {\n          'v-text-field--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style,\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  if (isReadonly.value) e.preventDefault();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"color\": props.color\n              }, {\n                default: () => [text]\n              })) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n//# sourceMappingURL=VFileInput.mjs.map","import { vModelText as _vModelText, withDirectives as _withDirectives, mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VTextarea.css\";\nimport \"../VTextField/VTextField.css\";\n\n// Components\nimport { VCounter } from \"../VCounter/VCounter.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Directives\nimport Intersect from \"../../directives/intersect/index.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVTextareaProps = propsFactory({\n  autoGrow: Boolean,\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: Function,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  noResize: Boolean,\n  rows: {\n    type: [Number, String],\n    default: 5,\n    validator: v => !isNaN(parseFloat(v))\n  },\n  maxRows: {\n    type: [Number, String],\n    validator: v => !isNaN(parseFloat(v))\n  },\n  suffix: String,\n  modelModifiers: Object,\n  ...makeVInputProps(),\n  ...makeVFieldProps()\n}, 'VTextarea');\nexport const VTextarea = genericComponent()({\n  name: 'VTextarea',\n  directives: {\n    Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextareaProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value || '').toString().length;\n    });\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    function onIntersect(isIntersecting, entries) {\n      if (!props.autofocus || !isIntersecting) return;\n      entries[0].target?.focus?.();\n    }\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const controlHeight = shallowRef('');\n    const textareaRef = ref();\n    const isActive = computed(() => props.persistentPlaceholder || isFocused.value || props.active);\n    function onFocus() {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = '';\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      const el = e.target;\n      model.value = el.value;\n      if (props.modelModifiers?.trim) {\n        const caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(() => {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n    const sizerRef = ref();\n    const rows = ref(+props.rows);\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    watchEffect(() => {\n      if (!props.autoGrow) rows.value = +props.rows;\n    });\n    function calculateInputHeight() {\n      if (!props.autoGrow) return;\n      nextTick(() => {\n        if (!sizerRef.value || !vFieldRef.value) return;\n        const style = getComputedStyle(sizerRef.value);\n        const fieldStyle = getComputedStyle(vFieldRef.value.$el);\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) + parseFloat(style.getPropertyValue('--v-input-padding-top')) + parseFloat(style.getPropertyValue('--v-field-padding-bottom'));\n        const height = sizerRef.value.scrollHeight;\n        const lineHeight = parseFloat(style.lineHeight);\n        const minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue('--v-input-control-height')));\n        const maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;\n        const newHeight = clamp(height ?? 0, minHeight, maxHeight);\n        rows.value = Math.floor((newHeight - padding) / lineHeight);\n        controlHeight.value = convertToUnit(newHeight);\n      });\n    }\n    onMounted(calculateInputHeight);\n    watch(model, calculateInputHeight);\n    watch(() => props.rows, calculateInputHeight);\n    watch(() => props.maxRows, calculateInputHeight);\n    watch(() => props.density, calculateInputHeight);\n    let observer;\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight);\n        observer.observe(sizerRef.value);\n      } else {\n        observer?.disconnect();\n      }\n    });\n    onBeforeUnmount(() => {\n      observer?.disconnect();\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = VInput.filterProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-textarea v-text-field', {\n          'v-textarea--prefixed': props.prefix,\n          'v-textarea--suffixed': props.suffix,\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-textarea--auto-grow': props.autoGrow,\n          'v-textarea--no-resize': props.noResize || props.autoGrow,\n          'v-text-field--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"style\": {\n              '--v-textarea-control-height': controlHeight.value\n            },\n            \"onClick\": onControlClick,\n            \"onMousedown\": onControlMousedown,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"active\": isActive.value || isDirty.value,\n            \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref3 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref3;\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), _withDirectives(_createVNode(\"textarea\", _mergeProps({\n                \"ref\": textareaRef,\n                \"class\": fieldClass,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"placeholder\": props.placeholder,\n                \"rows\": props.rows,\n                \"name\": props.name,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]), props.autoGrow && _withDirectives(_createVNode(\"textarea\", {\n                \"class\": [fieldClass, 'v-textarea__sizer'],\n                \"id\": `${slotProps.id}-sizer`,\n                \"onUpdate:modelValue\": $event => model.value = $event,\n                \"ref\": sizerRef,\n                \"readonly\": true,\n                \"aria-hidden\": \"true\"\n              }, null), [[_vModelText, model.value]]), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": props.persistentCounter || isFocused.value,\n          \"value\": counterValue.value,\n          \"max\": max.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef);\n  }\n});\n//# sourceMappingURL=VTextarea.mjs.map","<template>\r\n  <div class=\"add-route-container\">\r\n    <v-form\r\n      class=\"routeForm\"\r\n      validate-on=\"submit lazy\"\r\n      @submit.prevent=\"submit\"\r\n      ref=\"form\"\r\n    >\r\n      <v-container class=\"input\">\r\n        <v-text-field\r\n          label=\"Route Name\"\r\n          prepend-icon=\"mdi-bike\"\r\n          class=\"routeName\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          name=\"routeName\"\r\n          v-model=\"routeName\"\r\n          :rules=\"inputRules\"\r\n          required\r\n        ></v-text-field>\r\n        <v-container class=\"filter\">\r\n          <v-select\r\n            label=\"Select Terrain:\"\r\n            prepend-icon=\"mdi-road\"\r\n            v-model=\"terrain\"\r\n            :items=\"['Paved', 'Gravel', 'Dirt']\"\r\n            :rules=\"inputRules\"\r\n          >\r\n          </v-select>\r\n          <v-select\r\n            label=\"Select Difficulty: \"\r\n            prepend-icon=\"mdi-alert\"\r\n            v-model=\"difficulty\"\r\n            :items=\"['Beginner', 'Intermediate', 'Expert']\"\r\n            :rules=\"inputRules\"\r\n          >\r\n          </v-select>\r\n        </v-container>\r\n        <v-textarea\r\n          label=\"Route Description\"\r\n          prepend-icon=\"mdi-pencil\"\r\n          class=\"routeDesc\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          name=\"routeDesc\"\r\n          v-model=\"routeDesc\"\r\n          :rules=\"inputRules\"\r\n          required\r\n        ></v-textarea>\r\n        <v-file-input\r\n          label=\"Upload .gpx File\"\r\n          variant=\"outlined\"\r\n          accept=\".gpx\"\r\n          type=\"file\"\r\n          ref=\"file\"\r\n          :rules=\"inputRules\"\r\n          prepend-icon=\"mdi-map\"\r\n          required\r\n        ></v-file-input>\r\n        <v-btn type=\"submit\">submit</v-btn>\r\n      </v-container>\r\n    </v-form>\r\n\r\n    <v-container class=\"routeList\">\r\n      <h2>Routes:</h2>\r\n      <v-container class=\"route\" :key=\"r.name\" v-for=\"r in routes\">\r\n        <p>{{ r.name }} ID: {{ r.id }}</p>\r\n        <v-btn @click=\"deleteBtn(r.id)\">DELETE</v-btn>\r\n      </v-container>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRouteStore } from \"@/store/index.js\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { ref, reactive, computed } from \"vue\";\r\nconst form = ref(null);\r\nconst file = ref(null); //gpx file\r\nconst routeStore = useRouteStore();\r\nconst { deleteRoute, addRoute, getRoutes } = storeToRefs(routeStore);\r\n//route list\r\nlet routes = computed(() => routeStore.getRoutes);\r\n//data to be sent to backend to create new route\r\nlet newRoute = ref();\r\nlet routeName = ref(\"\");\r\nlet gpx = ref(\"\");\r\nlet difficulty = ref(\"\");\r\nlet routeLength = ref(0);\r\nlet terrain = ref(\"\");\r\nlet routeDesc = ref(\"\");\r\nlet elevation = ref(0);\r\nlet key = ref([]);\r\nlet value = ref('');\r\n\r\n//input validation\r\nlet inputRules = reactive([\r\n  (v) => v.length > 0 || \"Please add a value to this field\",\r\n]);\r\nlet deleteBtn = (id) => {\r\n  routeStore.deleteRoute(id);\r\n};\r\nlet submit = async (event) => {\r\n  const check = (await event).valid;\r\n  if (check) {\r\n    try {\r\n      await handleFile();\r\n      //create route objects and send it to the backend\r\n      let routeToAdd = {\r\n        route: newRoute.value,\r\n        name: routeName.value,\r\n        gpx: gpx.value,\r\n        difficulty: difficulty.value,\r\n        length: routeLength.value,\r\n        terrain: terrain.value,\r\n        desc: routeDesc.value,\r\n        elevation: elevation.value,\r\n        poi:{\r\n          key: key.value,\r\n          values: value.value\r\n        },\r\n      };\r\n      \r\n      routeStore.addRoute(routeToAdd);\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    } //\r\n  }\r\n};\r\nlet handleFile = () => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = async () => {\r\n          const tj = require(\"@tmcw/togeojson\"); //gpx to json converter\r\n          const fileContent = file.value.files[0];\r\n          //gpx text -> base64 to be stored in db\r\n          const blob = new Blob([fileContent], { type: \"text/plain\" });\r\n          const text = await blob.text();\r\n          gpx.value = btoa(text);\r\n          //make the text into a gpx file and parse it into a json object\r\n          const gpxFile = new DOMParser().parseFromString(text, \"text/xml\");\r\n          const converted = tj.gpx(gpxFile);\r\n          newRoute.value = converted;\r\n\r\n          const coords = converted.features[0].geometry.coordinates;\r\n          //max locations per request is 512\r\n          let countBy = Math.ceil(coords.length / 512);\r\n          let elevArr = {};\r\n          let count = 0;\r\n          for (let i = 0; i < coords.length; i = i + countBy) {\r\n            elevArr[count] = {\r\n              latitude: coords[i][1],\r\n              longitude: coords[i][0],\r\n            };\r\n            count++;\r\n          }\r\n          //get elevation at coord points from backend\r\n          let eresponse = await fetch(`http://localhost:3000/v1/geo/e`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(elevArr),\r\n          });\r\n          eresponse = await eresponse.json();\r\n          //elevation gain\r\n          elevArr = eresponse.response.results;\r\n          let egain = 0;\r\n          let diff = 0;\r\n          for (let i = 1; i < elevArr.length; i++) {\r\n            diff = elevArr[i].elevation - elevArr[i - 1].elevation;\r\n            //only positive elevation changes are added\r\n            if (diff > 0) {\r\n              egain += diff;\r\n            }\r\n          }\r\n          egain = Math.round(egain * 3.28084 * 10) / 10; //meters to feet, rounded to 1 decimal\r\n          elevation.value = egain;\r\n          //route length/distance\r\n          let totalDistance = 0;\r\n          let lat1 = 0;\r\n          let long1 = 0;\r\n          let lat2 = 0;\r\n          let long2 = 0;\r\n          for (let i = 0; i < coords.length - 1; i++) {\r\n            const d2ra = (angle) => (angle * Math.PI) / 180; //degrees to radians\r\n            lat1 = d2ra(coords[i][1]);\r\n            long1 = d2ra(coords[i][0]);\r\n            lat2 = d2ra(coords[i + 1][1]);\r\n            long2 = d2ra(coords[i + 1][0]);\r\n            //use haversine formula to calculate distance between the two points\r\n            const diffLat = lat2 - lat1; //distance between each point\r\n            const diffLong = long2 - long1;\r\n            const a =\r\n              Math.sin(diffLat / 2) ** 2 +\r\n              Math.cos(lat1) * Math.cos(lat2) * Math.sin(diffLong / 2) ** 2;\r\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n            const radius = 6371000; //earths radius\r\n            const distance = radius * c;\r\n            totalDistance += distance;\r\n          }\r\n\r\n          routeLength.value =\r\n            Math.round((totalDistance / 1000) * 0.621371 * 10) / 10; //meters to miles, rounded to 1 decimal\r\n          let f = (response) => {\r\n            // request succeeded\r\n            resolve(response);\r\n          };\r\n          f();\r\n        };\r\n        reader.readAsText(file.value.files[0]);\r\n      }\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n};\r\n</script>\r\n<style>\r\n.routeForm .routeList {\r\n  width: 50%;\r\n}\r\n.add-route-container {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.add-route-container .routeForm,\r\n.routeList {\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  background: #eee;\r\n  margin: 0 0 10px 0;\r\n  width: 50%;\r\n  color: #083a8c;\r\n}\r\n\r\n.add-route-container .routeList .routeForm .input label {\r\n  text-align: left;\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-route-container .routeList .routeForm {\r\n  text-align: center;\r\n  background: white;\r\n  width: 50%;\r\n}\r\n\r\n.routeList .route {\r\n  background: #eee;\r\n}\r\n\r\n.input {\r\n  text-align: center;\r\n  padding: 20px;\r\n  width: 50%;\r\n}\r\n\r\nbutton.button {\r\n  width: 100px;\r\n  background: lightgray;\r\n}\r\n\r\n.routeList {\r\n  font-family: roboto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .input {\r\n    width: 100%;\r\n    padding: 0px;\r\n    margin: 0 0 0 0;\r\n  }\r\n\r\n  .routeForm {\r\n    width: 100%;\r\n    margin: 0 0 0 0;\r\n    padding: 0px;\r\n  }\r\n\r\n  .add-route-container {\r\n    width: 100%;\r\n    margin: 0 0 0 0;\r\n    padding-bottom: 20px;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./EditRoute.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditRoute.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditRoute.vue?vue&type=style&index=0&id=46302ab9&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction $(element, tagName) {\n    return Array.from(element.getElementsByTagName(tagName));\n}\nfunction normalizeId(id) {\n    return id[0] === \"#\" ? id : `#${id}`;\n}\nfunction $ns(element, tagName, ns) {\n    return Array.from(element.getElementsByTagNameNS(ns, tagName));\n}\n/**\n * get the content of a text node, if any\n */\nfunction nodeVal(node) {\n    node?.normalize();\n    return (node && node.textContent) || \"\";\n}\n/**\n * Get one Y child of X, if any, otherwise null\n */\nfunction get1(node, tagName, callback) {\n    const n = node.getElementsByTagName(tagName);\n    const result = n.length ? n[0] : null;\n    if (result && callback)\n        callback(result);\n    return result;\n}\nfunction get(node, tagName, callback) {\n    const properties = {};\n    if (!node)\n        return properties;\n    const n = node.getElementsByTagName(tagName);\n    const result = n.length ? n[0] : null;\n    if (result && callback) {\n        return callback(result, properties);\n    }\n    return properties;\n}\nfunction val1(node, tagName, callback) {\n    const val = nodeVal(get1(node, tagName));\n    if (val && callback)\n        return callback(val) || {};\n    return {};\n}\nfunction $num(node, tagName, callback) {\n    const val = parseFloat(nodeVal(get1(node, tagName)));\n    if (isNaN(val))\n        return undefined;\n    if (val && callback)\n        return callback(val) || {};\n    return {};\n}\nfunction num1(node, tagName, callback) {\n    const val = parseFloat(nodeVal(get1(node, tagName)));\n    if (isNaN(val))\n        return undefined;\n    if (callback)\n        callback(val);\n    return val;\n}\nfunction getMulti(node, propertyNames) {\n    const properties = {};\n    for (const property of propertyNames) {\n        val1(node, property, (val) => {\n            properties[property] = val;\n        });\n    }\n    return properties;\n}\nfunction isElement(node) {\n    return node?.nodeType === 1;\n}\n\nfunction getLineStyle(node) {\n    return get(node, \"line\", (lineStyle) => {\n        const val = Object.assign({}, val1(lineStyle, \"color\", (color) => {\n            return { stroke: `#${color}` };\n        }), $num(lineStyle, \"opacity\", (opacity) => {\n            return { \"stroke-opacity\": opacity };\n        }), $num(lineStyle, \"width\", (width) => {\n            // GPX width is in mm, convert to px with 96 px per inch\n            return { \"stroke-width\": (width * 96) / 25.4 };\n        }));\n        return val;\n    });\n}\n\nfunction getExtensions(node) {\n    let values = [];\n    if (node === null)\n        return values;\n    for (const child of Array.from(node.childNodes)) {\n        if (!isElement(child))\n            continue;\n        const name = abbreviateName(child.nodeName);\n        if (name === \"gpxtpx:TrackPointExtension\") {\n            // loop again for nested garmin extensions (eg. \"gpxtpx:hr\")\n            values = values.concat(getExtensions(child));\n        }\n        else {\n            // push custom extension (eg. \"power\")\n            const val = nodeVal(child);\n            values.push([name, parseNumeric(val)]);\n        }\n    }\n    return values;\n}\nfunction abbreviateName(name) {\n    return [\"heart\", \"gpxtpx:hr\", \"hr\"].includes(name) ? \"heart\" : name;\n}\nfunction parseNumeric(val) {\n    const num = parseFloat(val);\n    return isNaN(num) ? val : num;\n}\n\nfunction coordPair$1(node) {\n    const ll = [\n        parseFloat(node.getAttribute(\"lon\") || \"\"),\n        parseFloat(node.getAttribute(\"lat\") || \"\"),\n    ];\n    if (isNaN(ll[0]) || isNaN(ll[1])) {\n        return null;\n    }\n    num1(node, \"ele\", (val) => {\n        ll.push(val);\n    });\n    const time = get1(node, \"time\");\n    return {\n        coordinates: ll,\n        time: time ? nodeVal(time) : null,\n        extendedValues: getExtensions(get1(node, \"extensions\")),\n    };\n}\n\nfunction extractProperties(node) {\n    const properties = getMulti(node, [\n        \"name\",\n        \"cmt\",\n        \"desc\",\n        \"type\",\n        \"time\",\n        \"keywords\",\n    ]);\n    const extensions = Array.from(node.getElementsByTagNameNS(\"http://www.garmin.com/xmlschemas/GpxExtensions/v3\", \"*\"));\n    for (const child of extensions) {\n        if (child.parentNode?.parentNode === node) {\n            properties[child.tagName.replace(\":\", \"_\")] = nodeVal(child);\n        }\n    }\n    const links = $(node, \"link\");\n    if (links.length) {\n        properties.links = links.map((link) => Object.assign({ href: link.getAttribute(\"href\") }, getMulti(link, [\"text\", \"type\"])));\n    }\n    return properties;\n}\n\n/**\n * Extract points from a trkseg or rte element.\n */\nfunction getPoints$1(node, pointname) {\n    const pts = $(node, pointname);\n    const line = [];\n    const times = [];\n    const extendedValues = {};\n    for (let i = 0; i < pts.length; i++) {\n        const c = coordPair$1(pts[i]);\n        if (!c) {\n            continue;\n        }\n        line.push(c.coordinates);\n        if (c.time)\n            times.push(c.time);\n        for (const [name, val] of c.extendedValues) {\n            const plural = name === \"heart\" ? name : name.replace(\"gpxtpx:\", \"\") + \"s\";\n            if (!extendedValues[plural]) {\n                extendedValues[plural] = Array(pts.length).fill(null);\n            }\n            extendedValues[plural][i] = val;\n        }\n    }\n    if (line.length < 2)\n        return; // Invalid line in GeoJSON\n    return {\n        line: line,\n        times: times,\n        extendedValues: extendedValues,\n    };\n}\n/**\n * Extract a LineString geometry from a rte\n * element.\n */\nfunction getRoute(node) {\n    const line = getPoints$1(node, \"rtept\");\n    if (!line)\n        return;\n    return {\n        type: \"Feature\",\n        properties: Object.assign({ _gpxType: \"rte\" }, extractProperties(node), getLineStyle(get1(node, \"extensions\"))),\n        geometry: {\n            type: \"LineString\",\n            coordinates: line.line,\n        },\n    };\n}\nfunction getTrack(node) {\n    const segments = $(node, \"trkseg\");\n    const track = [];\n    const times = [];\n    const extractedLines = [];\n    for (const segment of segments) {\n        const line = getPoints$1(segment, \"trkpt\");\n        if (line) {\n            extractedLines.push(line);\n            if (line.times && line.times.length)\n                times.push(line.times);\n        }\n    }\n    if (extractedLines.length === 0)\n        return null;\n    const multi = extractedLines.length > 1;\n    const properties = Object.assign({ _gpxType: \"trk\" }, extractProperties(node), getLineStyle(get1(node, \"extensions\")), times.length\n        ? {\n            coordinateProperties: {\n                times: multi ? times : times[0],\n            },\n        }\n        : {});\n    for (const line of extractedLines) {\n        track.push(line.line);\n        if (!properties.coordinateProperties) {\n            properties.coordinateProperties = {};\n        }\n        const props = properties.coordinateProperties;\n        const entries = Object.entries(line.extendedValues);\n        for (let i = 0; i < entries.length; i++) {\n            const [name, val] = entries[i];\n            if (multi) {\n                if (!props[name]) {\n                    props[name] = extractedLines.map((line) => new Array(line.line.length).fill(null));\n                }\n                props[name][i] = val;\n            }\n            else {\n                props[name] = val;\n            }\n        }\n    }\n    return {\n        type: \"Feature\",\n        properties: properties,\n        geometry: multi\n            ? {\n                type: \"MultiLineString\",\n                coordinates: track,\n            }\n            : {\n                type: \"LineString\",\n                coordinates: track[0],\n            },\n    };\n}\n/**\n * Extract a point, if possible, from a given node,\n * which is usually a wpt or trkpt\n */\nfunction getPoint(node) {\n    const properties = Object.assign(extractProperties(node), getMulti(node, [\"sym\"]));\n    const pair = coordPair$1(node);\n    if (!pair)\n        return null;\n    return {\n        type: \"Feature\",\n        properties,\n        geometry: {\n            type: \"Point\",\n            coordinates: pair.coordinates,\n        },\n    };\n}\n/**\n * Convert GPX to GeoJSON incrementally, returning\n * a [Generator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators)\n * that yields output feature by feature.\n */\nfunction* gpxGen(node) {\n    for (const track of $(node, \"trk\")) {\n        const feature = getTrack(track);\n        if (feature)\n            yield feature;\n    }\n    for (const route of $(node, \"rte\")) {\n        const feature = getRoute(route);\n        if (feature)\n            yield feature;\n    }\n    for (const waypoint of $(node, \"wpt\")) {\n        const point = getPoint(waypoint);\n        if (point)\n            yield point;\n    }\n}\n/**\n *\n * Convert a GPX document to GeoJSON. The first argument, `doc`, must be a GPX\n * document as an XML DOM - not as a string. You can get this using jQuery's default\n * `.ajax` function or using a bare XMLHttpRequest with the `.response` property\n * holding an XML DOM.\n *\n * The output is a JavaScript object of GeoJSON data, same as `.kml` outputs, with the\n * addition of a `_gpxType` property on each `LineString` feature that indicates whether\n * the feature was encoded as a route (`rte`) or track (`trk`) in the GPX document.\n */\nfunction gpx(node) {\n    return {\n        type: \"FeatureCollection\",\n        features: Array.from(gpxGen(node)),\n    };\n}\n\nconst EXTENSIONS_NS = \"http://www.garmin.com/xmlschemas/ActivityExtension/v2\";\nconst TRACKPOINT_ATTRIBUTES = [\n    [\"heartRate\", \"heartRates\"],\n    [\"Cadence\", \"cadences\"],\n    // Extended Trackpoint attributes\n    [\"Speed\", \"speeds\"],\n    [\"Watts\", \"watts\"],\n];\nconst LAP_ATTRIBUTES = [\n    [\"TotalTimeSeconds\", \"totalTimeSeconds\"],\n    [\"DistanceMeters\", \"distanceMeters\"],\n    [\"MaximumSpeed\", \"maxSpeed\"],\n    [\"AverageHeartRateBpm\", \"avgHeartRate\"],\n    [\"MaximumHeartRateBpm\", \"maxHeartRate\"],\n    // Extended Lap attributes\n    [\"AvgSpeed\", \"avgSpeed\"],\n    [\"AvgWatts\", \"avgWatts\"],\n    [\"MaxWatts\", \"maxWatts\"],\n];\nfunction getProperties(node, attributeNames) {\n    const properties = [];\n    for (const [tag, alias] of attributeNames) {\n        let elem = get1(node, tag);\n        if (!elem) {\n            const elements = node.getElementsByTagNameNS(EXTENSIONS_NS, tag);\n            if (elements.length) {\n                elem = elements[0];\n            }\n        }\n        const val = parseFloat(nodeVal(elem));\n        if (!isNaN(val)) {\n            properties.push([alias, val]);\n        }\n    }\n    return properties;\n}\nfunction coordPair(node) {\n    const ll = [num1(node, \"LongitudeDegrees\"), num1(node, \"LatitudeDegrees\")];\n    if (ll[0] === undefined ||\n        isNaN(ll[0]) ||\n        ll[1] === undefined ||\n        isNaN(ll[1])) {\n        return null;\n    }\n    const heartRate = get1(node, \"HeartRateBpm\");\n    const time = nodeVal(get1(node, \"Time\"));\n    get1(node, \"AltitudeMeters\", (alt) => {\n        const a = parseFloat(nodeVal(alt));\n        if (!isNaN(a)) {\n            ll.push(a);\n        }\n    });\n    return {\n        coordinates: ll,\n        time: time || null,\n        heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null,\n        extensions: getProperties(node, TRACKPOINT_ATTRIBUTES),\n    };\n}\nfunction getPoints(node) {\n    const pts = $(node, \"Trackpoint\");\n    const line = [];\n    const times = [];\n    const heartRates = [];\n    if (pts.length < 2)\n        return null; // Invalid line in GeoJSON\n    const extendedProperties = {};\n    const result = { extendedProperties };\n    for (let i = 0; i < pts.length; i++) {\n        const c = coordPair(pts[i]);\n        if (c === null)\n            continue;\n        line.push(c.coordinates);\n        const { time, heartRate, extensions } = c;\n        if (time)\n            times.push(time);\n        if (heartRate)\n            heartRates.push(heartRate);\n        for (const [alias, value] of extensions) {\n            if (!extendedProperties[alias]) {\n                extendedProperties[alias] = Array(pts.length).fill(null);\n            }\n            extendedProperties[alias][i] = value;\n        }\n    }\n    if (line.length < 2)\n        return null;\n    return Object.assign(result, {\n        line: line,\n        times: times,\n        heartRates: heartRates,\n    });\n}\nfunction getLap(node) {\n    const segments = $(node, \"Track\");\n    const track = [];\n    const times = [];\n    const heartRates = [];\n    const allExtendedProperties = [];\n    let line;\n    const properties = Object.assign(Object.fromEntries(getProperties(node, LAP_ATTRIBUTES)), get(node, \"Name\", (nameElement) => {\n        return { name: nodeVal(nameElement) };\n    }));\n    for (const segment of segments) {\n        line = getPoints(segment);\n        if (line) {\n            track.push(line.line);\n            if (line.times.length)\n                times.push(line.times);\n            if (line.heartRates.length)\n                heartRates.push(line.heartRates);\n            allExtendedProperties.push(line.extendedProperties);\n        }\n    }\n    for (let i = 0; i < allExtendedProperties.length; i++) {\n        const extendedProperties = allExtendedProperties[i];\n        for (const property in extendedProperties) {\n            if (segments.length === 1) {\n                if (line) {\n                    properties[property] = line.extendedProperties[property];\n                }\n            }\n            else {\n                if (!properties[property]) {\n                    properties[property] = track.map((track) => Array(track.length).fill(null));\n                }\n                properties[property][i] = extendedProperties[property];\n            }\n        }\n    }\n    if (track.length === 0)\n        return null;\n    if (times.length || heartRates.length) {\n        properties.coordinateProperties = Object.assign(times.length\n            ? {\n                times: track.length === 1 ? times[0] : times,\n            }\n            : {}, heartRates.length\n            ? {\n                heart: track.length === 1 ? heartRates[0] : heartRates,\n            }\n            : {});\n    }\n    return {\n        type: \"Feature\",\n        properties: properties,\n        geometry: track.length === 1\n            ? {\n                type: \"LineString\",\n                coordinates: track[0],\n            }\n            : {\n                type: \"MultiLineString\",\n                coordinates: track,\n            },\n    };\n}\n/**\n * Incrementally convert a TCX document to GeoJSON. The\n * first argument, `doc`, must be a TCX\n * document as an XML DOM - not as a string.\n */\nfunction* tcxGen(node) {\n    for (const lap of $(node, \"Lap\")) {\n        const feature = getLap(lap);\n        if (feature)\n            yield feature;\n    }\n    for (const course of $(node, \"Courses\")) {\n        const feature = getLap(course);\n        if (feature)\n            yield feature;\n    }\n}\n/**\n * Convert a TCX document to GeoJSON. The first argument, `doc`, must be a TCX\n * document as an XML DOM - not as a string.\n */\nfunction tcx(node) {\n    return {\n        type: \"FeatureCollection\",\n        features: Array.from(tcxGen(node)),\n    };\n}\n\nfunction fixColor(v, prefix) {\n    const properties = {};\n    const colorProp = prefix == \"stroke\" || prefix === \"fill\" ? prefix : prefix + \"-color\";\n    if (v[0] === \"#\") {\n        v = v.substring(1);\n    }\n    if (v.length === 6 || v.length === 3) {\n        properties[colorProp] = \"#\" + v;\n    }\n    else if (v.length === 8) {\n        properties[prefix + \"-opacity\"] = parseInt(v.substring(0, 2), 16) / 255;\n        properties[colorProp] =\n            \"#\" + v.substring(6, 8) + v.substring(4, 6) + v.substring(2, 4);\n    }\n    return properties;\n}\n\nfunction numericProperty(node, source, target) {\n    const properties = {};\n    num1(node, source, (val) => {\n        properties[target] = val;\n    });\n    return properties;\n}\nfunction getColor(node, output) {\n    return get(node, \"color\", (elem) => fixColor(nodeVal(elem), output));\n}\nfunction extractIconHref(node) {\n    return get(node, \"Icon\", (icon, properties) => {\n        val1(icon, \"href\", (href) => {\n            properties.icon = href;\n        });\n        return properties;\n    });\n}\nfunction extractIcon(node) {\n    return get(node, \"IconStyle\", (iconStyle) => {\n        return Object.assign(getColor(iconStyle, \"icon\"), numericProperty(iconStyle, \"scale\", \"icon-scale\"), numericProperty(iconStyle, \"heading\", \"icon-heading\"), get(iconStyle, \"hotSpot\", (hotspot) => {\n            const left = parseFloat(hotspot.getAttribute(\"x\") || \"\");\n            const top = parseFloat(hotspot.getAttribute(\"y\") || \"\");\n            const xunits = hotspot.getAttribute(\"xunits\") || \"\";\n            const yunits = hotspot.getAttribute(\"yunits\") || \"\";\n            if (!isNaN(left) && !isNaN(top))\n                return {\n                    \"icon-offset\": [left, top],\n                    \"icon-offset-units\": [xunits, yunits],\n                };\n            return {};\n        }), extractIconHref(iconStyle));\n    });\n}\nfunction extractLabel(node) {\n    return get(node, \"LabelStyle\", (labelStyle) => {\n        return Object.assign(getColor(labelStyle, \"label\"), numericProperty(labelStyle, \"scale\", \"label-scale\"));\n    });\n}\nfunction extractLine(node) {\n    return get(node, \"LineStyle\", (lineStyle) => {\n        return Object.assign(getColor(lineStyle, \"stroke\"), numericProperty(lineStyle, \"width\", \"stroke-width\"));\n    });\n}\nfunction extractPoly(node) {\n    return get(node, \"PolyStyle\", (polyStyle, properties) => {\n        return Object.assign(properties, get(polyStyle, \"color\", (elem) => fixColor(nodeVal(elem), \"fill\")), val1(polyStyle, \"fill\", (fill) => {\n            if (fill === \"0\")\n                return { \"fill-opacity\": 0 };\n        }), val1(polyStyle, \"outline\", (outline) => {\n            if (outline === \"0\")\n                return { \"stroke-opacity\": 0 };\n        }));\n    });\n}\nfunction extractStyle(node) {\n    return Object.assign({}, extractPoly(node), extractLine(node), extractLabel(node), extractIcon(node));\n}\n\nconst toNumber = (x) => Number(x);\nconst typeConverters = {\n    string: (x) => x,\n    int: toNumber,\n    uint: toNumber,\n    short: toNumber,\n    ushort: toNumber,\n    float: toNumber,\n    double: toNumber,\n    bool: (x) => Boolean(x),\n};\nfunction extractExtendedData(node, schema) {\n    return get(node, \"ExtendedData\", (extendedData, properties) => {\n        for (const data of $(extendedData, \"Data\")) {\n            properties[data.getAttribute(\"name\") || \"\"] = nodeVal(get1(data, \"value\"));\n        }\n        for (const simpleData of $(extendedData, \"SimpleData\")) {\n            const name = simpleData.getAttribute(\"name\") || \"\";\n            const typeConverter = schema[name] || typeConverters.string;\n            properties[name] = typeConverter(nodeVal(simpleData));\n        }\n        return properties;\n    });\n}\nfunction getMaybeHTMLDescription(node) {\n    const descriptionNode = get1(node, \"description\");\n    for (const c of Array.from(descriptionNode?.childNodes || [])) {\n        if (c.nodeType === 4) {\n            return {\n                description: {\n                    \"@type\": \"html\",\n                    value: nodeVal(c),\n                },\n            };\n        }\n    }\n    return {};\n}\nfunction extractTimeSpan(node) {\n    return get(node, \"TimeSpan\", (timeSpan) => {\n        return {\n            timespan: {\n                begin: nodeVal(get1(timeSpan, \"begin\")),\n                end: nodeVal(get1(timeSpan, \"end\")),\n            },\n        };\n    });\n}\nfunction extractTimeStamp(node) {\n    return get(node, \"TimeStamp\", (timeStamp) => {\n        return { timestamp: nodeVal(get1(timeStamp, \"when\")) };\n    });\n}\nfunction extractCascadedStyle(node, styleMap) {\n    return val1(node, \"styleUrl\", (styleUrl) => {\n        styleUrl = normalizeId(styleUrl);\n        if (styleMap[styleUrl]) {\n            return Object.assign({ styleUrl }, styleMap[styleUrl]);\n        }\n        // For backward-compatibility. Should we still include\n        // styleUrl even if it's not resolved?\n        return { styleUrl };\n    });\n}\n\nconst removeSpace = /\\s*/g;\nconst trimSpace = /^\\s*|\\s*$/g;\nconst splitSpace = /\\s+/;\n/**\n * Get one coordinate from a coordinate array, if any\n */\nfunction coord1(value) {\n    return value\n        .replace(removeSpace, \"\")\n        .split(\",\")\n        .map(parseFloat)\n        .filter((num) => !isNaN(num))\n        .slice(0, 3);\n}\n/**\n * Get all coordinates from a coordinate array as [[],[]]\n */\nfunction coord(value) {\n    return value\n        .replace(trimSpace, \"\")\n        .split(splitSpace)\n        .map(coord1)\n        .filter((coord) => {\n        return coord.length >= 2;\n    });\n}\nfunction gxCoords(node) {\n    let elems = $(node, \"coord\");\n    if (elems.length === 0) {\n        elems = $ns(node, \"coord\", \"*\");\n    }\n    const coordinates = elems.map((elem) => {\n        return nodeVal(elem).split(\" \").map(parseFloat);\n    });\n    if (coordinates.length === 0) {\n        return null;\n    }\n    return {\n        geometry: coordinates.length > 2\n            ? {\n                type: \"LineString\",\n                coordinates,\n            }\n            : {\n                type: \"Point\",\n                coordinates: coordinates[0],\n            },\n        times: $(node, \"when\").map((elem) => nodeVal(elem)),\n    };\n}\nfunction fixRing(ring) {\n    if (ring.length === 0)\n        return ring;\n    const first = ring[0];\n    const last = ring[ring.length - 1];\n    let equal = true;\n    for (let i = 0; i < Math.max(first.length, last.length); i++) {\n        if (first[i] !== last[i]) {\n            equal = false;\n            break;\n        }\n    }\n    if (!equal) {\n        return ring.concat([ring[0]]);\n    }\n    return ring;\n}\nfunction getCoordinates(node) {\n    return nodeVal(get1(node, \"coordinates\"));\n}\nfunction getGeometry(node) {\n    let geometries = [];\n    let coordTimes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n        const child = node.childNodes.item(i);\n        if (isElement(child)) {\n            switch (child.tagName) {\n                case \"MultiGeometry\":\n                case \"MultiTrack\":\n                case \"gx:MultiTrack\": {\n                    const childGeometries = getGeometry(child);\n                    geometries = geometries.concat(childGeometries.geometries);\n                    coordTimes = coordTimes.concat(childGeometries.coordTimes);\n                    break;\n                }\n                case \"Point\": {\n                    const coordinates = coord1(getCoordinates(child));\n                    if (coordinates.length >= 2) {\n                        geometries.push({\n                            type: \"Point\",\n                            coordinates,\n                        });\n                    }\n                    break;\n                }\n                case \"LinearRing\":\n                case \"LineString\": {\n                    const coordinates = coord(getCoordinates(child));\n                    if (coordinates.length >= 2) {\n                        geometries.push({\n                            type: \"LineString\",\n                            coordinates,\n                        });\n                    }\n                    break;\n                }\n                case \"Polygon\": {\n                    const coords = [];\n                    for (const linearRing of $(child, \"LinearRing\")) {\n                        const ring = fixRing(coord(getCoordinates(linearRing)));\n                        if (ring.length >= 4) {\n                            coords.push(ring);\n                        }\n                    }\n                    if (coords.length) {\n                        geometries.push({\n                            type: \"Polygon\",\n                            coordinates: coords,\n                        });\n                    }\n                    break;\n                }\n                case \"Track\":\n                case \"gx:Track\": {\n                    const gx = gxCoords(child);\n                    if (!gx)\n                        break;\n                    const { times, geometry } = gx;\n                    geometries.push(geometry);\n                    if (times.length)\n                        coordTimes.push(times);\n                    break;\n                }\n            }\n        }\n    }\n    return {\n        geometries,\n        coordTimes,\n    };\n}\n\nfunction geometryListToGeometry(geometries) {\n    return geometries.length === 0\n        ? null\n        : geometries.length === 1\n            ? geometries[0]\n            : {\n                type: \"GeometryCollection\",\n                geometries,\n            };\n}\nfunction getPlacemark(node, styleMap, schema, options) {\n    const { coordTimes, geometries } = getGeometry(node);\n    const geometry = geometryListToGeometry(geometries);\n    if (!geometry && options.skipNullGeometry) {\n        return null;\n    }\n    const feature = {\n        type: \"Feature\",\n        geometry,\n        properties: Object.assign(getMulti(node, [\n            \"name\",\n            \"address\",\n            \"visibility\",\n            \"open\",\n            \"phoneNumber\",\n            \"description\",\n        ]), getMaybeHTMLDescription(node), extractCascadedStyle(node, styleMap), extractStyle(node), extractExtendedData(node, schema), extractTimeSpan(node), extractTimeStamp(node), coordTimes.length\n            ? {\n                coordinateProperties: {\n                    times: coordTimes.length === 1 ? coordTimes[0] : coordTimes,\n                },\n            }\n            : {}),\n    };\n    if (feature.properties?.visibility !== undefined) {\n        feature.properties.visibility = feature.properties.visibility !== \"0\";\n    }\n    const id = node.getAttribute(\"id\");\n    if (id !== null && id !== \"\")\n        feature.id = id;\n    return feature;\n}\n\nfunction getGroundOverlayBox(node) {\n    const latLonQuad = get1(node, \"gx:LatLonQuad\");\n    if (latLonQuad) {\n        const ring = fixRing(coord(getCoordinates(node)));\n        return {\n            geometry: {\n                type: \"Polygon\",\n                coordinates: [ring],\n            },\n        };\n    }\n    return getLatLonBox(node);\n}\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nfunction rotateBox(bbox, coordinates, rotation) {\n    const center = [(bbox[0] + bbox[2]) / 2, (bbox[1] + bbox[3]) / 2];\n    return [\n        coordinates[0].map((coordinate) => {\n            const dy = coordinate[1] - center[1];\n            const dx = coordinate[0] - center[0];\n            const distance = Math.sqrt(Math.pow(dy, 2) + Math.pow(dx, 2));\n            const angle = Math.atan2(dy, dx) + rotation * DEGREES_TO_RADIANS;\n            return [\n                center[0] + Math.cos(angle) * distance,\n                center[1] + Math.sin(angle) * distance,\n            ];\n        }),\n    ];\n}\nfunction getLatLonBox(node) {\n    const latLonBox = get1(node, \"LatLonBox\");\n    if (latLonBox) {\n        const north = num1(latLonBox, \"north\");\n        const west = num1(latLonBox, \"west\");\n        const east = num1(latLonBox, \"east\");\n        const south = num1(latLonBox, \"south\");\n        const rotation = num1(latLonBox, \"rotation\");\n        if (typeof north === \"number\" &&\n            typeof south === \"number\" &&\n            typeof west === \"number\" &&\n            typeof east === \"number\") {\n            const bbox = [west, south, east, north];\n            let coordinates = [\n                [\n                    [west, north],\n                    [east, north],\n                    [east, south],\n                    [west, south],\n                    [west, north], // top left (again)\n                ],\n            ];\n            if (typeof rotation === \"number\") {\n                coordinates = rotateBox(bbox, coordinates, rotation);\n            }\n            return {\n                bbox,\n                geometry: {\n                    type: \"Polygon\",\n                    coordinates,\n                },\n            };\n        }\n    }\n    return null;\n}\nfunction getGroundOverlay(node, styleMap, schema, options) {\n    const box = getGroundOverlayBox(node);\n    const geometry = box?.geometry || null;\n    if (!geometry && options.skipNullGeometry) {\n        return null;\n    }\n    const feature = {\n        type: \"Feature\",\n        geometry,\n        properties: Object.assign(\n        /**\n         * Related to\n         * https://gist.github.com/tmcw/037a1cb6660d74a392e9da7446540f46\n         */\n        { \"@geometry-type\": \"groundoverlay\" }, getMulti(node, [\n            \"name\",\n            \"address\",\n            \"visibility\",\n            \"open\",\n            \"phoneNumber\",\n            \"description\",\n        ]), getMaybeHTMLDescription(node), extractCascadedStyle(node, styleMap), extractStyle(node), extractIconHref(node), extractExtendedData(node, schema), extractTimeSpan(node), extractTimeStamp(node)),\n    };\n    if (box?.bbox) {\n        feature.bbox = box.bbox;\n    }\n    if (feature.properties?.visibility !== undefined) {\n        feature.properties.visibility = feature.properties.visibility !== \"0\";\n    }\n    const id = node.getAttribute(\"id\");\n    if (id !== null && id !== \"\")\n        feature.id = id;\n    return feature;\n}\n\nfunction getStyleId(style) {\n    let id = style.getAttribute(\"id\");\n    const parentNode = style.parentNode;\n    if (!id &&\n        isElement(parentNode) &&\n        parentNode.localName === \"CascadingStyle\") {\n        id = parentNode.getAttribute(\"kml:id\") || parentNode.getAttribute(\"id\");\n    }\n    return normalizeId(id || \"\");\n}\nfunction buildStyleMap(node) {\n    const styleMap = {};\n    for (const style of $(node, \"Style\")) {\n        styleMap[getStyleId(style)] = extractStyle(style);\n    }\n    for (const map of $(node, \"StyleMap\")) {\n        const id = normalizeId(map.getAttribute(\"id\") || \"\");\n        val1(map, \"styleUrl\", (styleUrl) => {\n            styleUrl = normalizeId(styleUrl);\n            if (styleMap[styleUrl]) {\n                styleMap[id] = styleMap[styleUrl];\n            }\n        });\n    }\n    return styleMap;\n}\nfunction buildSchema(node) {\n    const schema = {};\n    for (const field of $(node, \"SimpleField\")) {\n        schema[field.getAttribute(\"name\") || \"\"] =\n            typeConverters[field.getAttribute(\"type\") || \"\"] ||\n                typeConverters[\"string\"];\n    }\n    return schema;\n}\nconst FOLDER_PROPS = [\n    \"name\",\n    \"visibility\",\n    \"open\",\n    \"address\",\n    \"description\",\n    \"phoneNumber\",\n    \"visibility\",\n];\nfunction getFolder(node) {\n    const meta = {};\n    for (const child of Array.from(node.childNodes)) {\n        if (isElement(child) && FOLDER_PROPS.includes(child.tagName)) {\n            meta[child.tagName] = nodeVal(child);\n        }\n    }\n    return {\n        type: \"folder\",\n        meta,\n        children: [],\n    };\n}\n/**\n * Yield a nested tree with KML folder structure\n *\n * This generates a tree with the given structure:\n *\n * ```js\n * {\n *   \"type\": \"root\",\n *   \"children\": [\n *     {\n *       \"type\": \"folder\",\n *       \"meta\": {\n *         \"name\": \"Test\"\n *       },\n *       \"children\": [\n *          // ...features and folders\n *       ]\n *     }\n *     // ...features\n *   ]\n * }\n * ```\n *\n * ### GroundOverlay\n *\n * GroundOverlay elements are converted into\n * `Feature` objects with `Polygon` geometries,\n * a property like:\n *\n * ```json\n * {\n *   \"@geometry-type\": \"groundoverlay\"\n * }\n * ```\n *\n * And the ground overlay's image URL in the `href`\n * property. Ground overlays will need to be displayed\n * with a separate method to other features, depending\n * on which map framework you're using.\n */\nfunction kmlWithFolders(node, options = {\n    skipNullGeometry: false,\n}) {\n    const styleMap = buildStyleMap(node);\n    const schema = buildSchema(node);\n    const tree = { type: \"root\", children: [] };\n    function traverse(node, pointer, options) {\n        if (isElement(node)) {\n            switch (node.tagName) {\n                case \"GroundOverlay\": {\n                    const placemark = getGroundOverlay(node, styleMap, schema, options);\n                    if (placemark) {\n                        pointer.children.push(placemark);\n                    }\n                    break;\n                }\n                case \"Placemark\": {\n                    const placemark = getPlacemark(node, styleMap, schema, options);\n                    if (placemark) {\n                        pointer.children.push(placemark);\n                    }\n                    break;\n                }\n                case \"Folder\": {\n                    const folder = getFolder(node);\n                    pointer.children.push(folder);\n                    pointer = folder;\n                    break;\n                }\n            }\n        }\n        if (node.childNodes) {\n            for (let i = 0; i < node.childNodes.length; i++) {\n                traverse(node.childNodes[i], pointer, options);\n            }\n        }\n    }\n    traverse(node, tree, options);\n    return tree;\n}\n/**\n * Convert KML to GeoJSON incrementally, returning\n * a [Generator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators)\n * that yields output feature by feature.\n */\nfunction* kmlGen(node, options = {\n    skipNullGeometry: false,\n}) {\n    const styleMap = buildStyleMap(node);\n    const schema = buildSchema(node);\n    for (const placemark of $(node, \"Placemark\")) {\n        const feature = getPlacemark(placemark, styleMap, schema, options);\n        if (feature)\n            yield feature;\n    }\n    for (const groundOverlay of $(node, \"GroundOverlay\")) {\n        const feature = getGroundOverlay(groundOverlay, styleMap, schema, options);\n        if (feature)\n            yield feature;\n    }\n}\n/**\n * Convert a KML document to GeoJSON. The first argument, `doc`, must be a KML\n * document as an XML DOM - not as a string. You can get this using jQuery's default\n * `.ajax` function or using a bare XMLHttpRequest with the `.response` property\n * holding an XML DOM.\n *\n * The output is a JavaScript object of GeoJSON data. You can convert it to a string\n * with [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * or use it directly in libraries.\n */\nfunction kml(node, options = {\n    skipNullGeometry: false,\n}) {\n    return {\n        type: \"FeatureCollection\",\n        features: Array.from(kmlGen(node, options)),\n    };\n}\n\nexports.gpx = gpx;\nexports.gpxGen = gpxGen;\nexports.kml = kml;\nexports.kmlGen = kmlGen;\nexports.kmlWithFolders = kmlWithFolders;\nexports.tcx = tcx;\nexports.tcxGen = tcxGen;\n//# sourceMappingURL=togeojson.cjs.map\n","import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { createForm, makeFormProps } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVFormProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeFormProps()\n}, 'VForm');\nexport const VForm = genericComponent()({\n  name: 'VForm',\n  props: makeVFormProps(),\n  emits: {\n    'update:modelValue': val => true,\n    submit: e => true\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const form = createForm(props);\n    const formRef = ref();\n    function onReset(e) {\n      e.preventDefault();\n      form.reset();\n    }\n    function onSubmit(_e) {\n      const e = _e;\n      const ready = form.validate();\n      e.then = ready.then.bind(ready);\n      e.catch = ready.catch.bind(ready);\n      e.finally = ready.finally.bind(ready);\n      emit('submit', e);\n      if (!e.defaultPrevented) {\n        ready.then(_ref2 => {\n          let {\n            valid\n          } = _ref2;\n          if (valid) {\n            formRef.value?.submit();\n          }\n        });\n      }\n      e.preventDefault();\n    }\n    useRender(() => _createVNode(\"form\", {\n      \"ref\": formRef,\n      \"class\": ['v-form', props.class],\n      \"style\": props.style,\n      \"novalidate\": true,\n      \"onReset\": onReset,\n      \"onSubmit\": onSubmit\n    }, [slots.default?.(form)]));\n    return forwardRefs(form, formRef);\n  }\n});\n//# sourceMappingURL=VForm.mjs.map"],"names":["makeVFileInputProps","propsFactory","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","val","every","clearable","VFileInput","name","inheritAttrs","props","emits","e","focused","files","setup","_ref","attrs","emit","slots","t","model","isFocused","focus","blur","base","undefined","totalBytes","value","reduce","bytes","_ref2","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","length","vInputRef","vFieldRef","inputRef","isActive","active","isPlainOrUnderlined","variant","onFocus","document","activeElement","onClickPrepend","onControlClick","onControlMousedown","click","onClear","stopPropagation","newValue","hasModelReset","isArray","useRender","hasCounter","hasDetails","details","rootAttrs","inputAttrs","_","inputProps","VInput","filterProps","fieldProps","$event","class","style","_ref3","id","isDisabled","isDirty","isReadonly","isValid","VField","_ref4","fieldClass","slotProps","preventDefault","target","selection","text","VChip","color","join","VCounter","forwardRefs","makeVTextareaProps","autoGrow","autofocus","Function","prefix","placeholder","persistentPlaceholder","persistentCounter","noResize","rows","isNaN","parseFloat","maxRows","suffix","modelModifiers","Object","VTextarea","directives","Intersect","toString","max","maxlength","onIntersect","isIntersecting","entries","controlHeight","textareaRef","onInput","el","trim","caretPosition","selectionStart","selectionEnd","sizerRef","calculateInputHeight","getComputedStyle","fieldStyle","$el","padding","getPropertyValue","height","scrollHeight","lineHeight","minHeight","Math","maxHeight","Infinity","newHeight","floor","observer","density","ResizeObserver","observe","disconnect","dirty","handler","once","form","routeStore","deleteRoute","addRoute","getRoutes","routes","newRoute","routeName","gpx","difficulty","routeLength","terrain","routeDesc","elevation","key","inputRules","deleteBtn","submit","async","event","check","valid","handleFile","routeToAdd","route","desc","poi","values","error","console","log","Promise","resolve","reject","reader","FileReader","onload","tj","fileContent","blob","Blob","btoa","gpxFile","DOMParser","parseFromString","converted","coords","features","geometry","coordinates","countBy","ceil","elevArr","count","i","latitude","longitude","eresponse","fetch","method","headers","body","JSON","stringify","json","response","results","egain","diff","round","totalDistance","lat1","long1","lat2","long2","d2ra","angle","PI","diffLat","diffLong","a","sin","cos","c","atan2","sqrt","radius","distance","f","readAsText","__exports__","$","element","tagName","from","getElementsByTagName","normalizeId","$ns","ns","getElementsByTagNameNS","nodeVal","node","normalize","textContent","get1","callback","n","result","get","properties","val1","$num","num1","getMulti","propertyNames","property","isElement","nodeType","getLineStyle","lineStyle","assign","stroke","opacity","width","getExtensions","child","childNodes","abbreviateName","nodeName","concat","push","parseNumeric","num","coordPair$1","ll","getAttribute","time","extendedValues","extractProperties","extensions","parentNode","replace","links","link","href","getPoints$1","pointname","pts","line","times","plural","fill","getRoute","_gpxType","getTrack","segments","track","extractedLines","segment","multi","coordinateProperties","getPoint","pair","gpxGen","feature","waypoint","point","defineProperty","exports","EXTENSIONS_NS","TRACKPOINT_ATTRIBUTES","LAP_ATTRIBUTES","getProperties","attributeNames","tag","alias","elem","elements","coordPair","heartRate","alt","getPoints","heartRates","extendedProperties","getLap","allExtendedProperties","fromEntries","nameElement","heart","tcxGen","lap","course","tcx","fixColor","colorProp","substring","parseInt","numericProperty","source","getColor","output","extractIconHref","icon","extractIcon","iconStyle","hotspot","left","top","xunits","yunits","extractLabel","labelStyle","extractLine","extractPoly","polyStyle","outline","extractStyle","toNumber","x","typeConverters","string","int","uint","short","ushort","float","double","bool","extractExtendedData","schema","extendedData","data","simpleData","typeConverter","getMaybeHTMLDescription","descriptionNode","description","extractTimeSpan","timeSpan","timespan","begin","end","extractTimeStamp","timeStamp","timestamp","extractCascadedStyle","styleMap","styleUrl","removeSpace","trimSpace","splitSpace","coord1","split","filter","slice","coord","gxCoords","elems","fixRing","ring","first","last","equal","getCoordinates","getGeometry","geometries","coordTimes","item","childGeometries","linearRing","gx","geometryListToGeometry","getPlacemark","options","skipNullGeometry","visibility","getGroundOverlayBox","latLonQuad","getLatLonBox","DEGREES_TO_RADIANS","rotateBox","bbox","rotation","center","coordinate","dy","dx","pow","latLonBox","north","west","east","south","getGroundOverlay","box","getStyleId","localName","buildStyleMap","buildSchema","field","FOLDER_PROPS","getFolder","meta","children","kmlWithFolders","tree","traverse","pointer","placemark","folder","kmlGen","groundOverlay","kml","makeVFormProps","VForm","formRef","onReset","reset","onSubmit","_e","ready","validate","then","bind","catch","finally","defaultPrevented"],"sourceRoot":""}