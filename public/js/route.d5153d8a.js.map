{"version":3,"file":"js/route.d5153d8a.js","mappings":"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","sources":["webpack://gps-leaflet/./src/views/TestView.vue","webpack://gps-leaflet/./src/views/TestView.vue?4760","webpack://gps-leaflet/./node_modules/vuetify/lib/components/VFileInput/VFileInput.mjs"],"sourcesContent":["<template>\r\n  <p>Empty</p>\r\n  <v-file-input\r\n          label=\"Upload .gpx File\"\r\n          variant=\"outlined\"\r\n          accept=\".gpx\"\r\n          type=\"file\"\r\n          ref=\"file\"\r\n          required\r\n        ></v-file-input>\r\n<v-btn @click=\"console.log(bt())\"></v-btn>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed } from \"vue\";\r\nlet file = ref();\r\nlet someFunc = () => {\r\n  let fileContent = file.value.files[0];\r\n  console.log(fileContent);\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import script from \"./TestView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TestView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VFileInput.css\";\n\n// Components\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: '$vuetify.fileInput.counterSize'\n  },\n  counterString: {\n    type: String,\n    default: '$vuetify.fileInput.counter'\n  },\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number],\n    default: false,\n    validator: v => {\n      return typeof v === 'boolean' || [1000, 1024].includes(v);\n    }\n  },\n  ...makeVInputProps({\n    prependIcon: '$file'\n  }),\n  modelValue: {\n    type: Array,\n    default: () => [],\n    validator: val => {\n      return wrapInArray(val).every(v => v != null && typeof v === 'object');\n    }\n  },\n  ...makeVFieldProps({\n    clearable: true\n  })\n}, 'VFileInput');\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: makeVFileInputProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': files => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => isFocused.value || props.active);\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onClickPrepend(e) {\n      onControlClick(e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = VInput.filterProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-file-input', {\n          'v-text-field--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style,\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  if (isReadonly.value) e.preventDefault();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"color\": props.color\n              }, {\n                default: () => [text]\n              })) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n//# sourceMappingURL=VFileInput.mjs.map"],"names":["file","__exports__","makeVFileInputProps","propsFactory","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","val","every","clearable","VFileInput","name","inheritAttrs","props","emits","e","focused","files","setup","_ref","attrs","emit","slots","t","model","isFocused","focus","blur","base","undefined","totalBytes","value","reduce","bytes","_ref2","size","totalBytesReadable","fileNames","map","counterValue","fileCount","length","vInputRef","vFieldRef","inputRef","isActive","active","isPlainOrUnderlined","variant","onFocus","document","activeElement","onClickPrepend","onControlClick","onControlMousedown","click","onClear","stopPropagation","newValue","hasModelReset","isArray","useRender","hasCounter","hasDetails","details","rootAttrs","inputAttrs","_","inputProps","VInput","filterProps","fieldProps","$event","class","style","_ref3","id","isDisabled","isDirty","isReadonly","isValid","VField","_ref4","fieldClass","slotProps","preventDefault","target","selection","text","VChip","color","join","VCounter","forwardRefs"],"sourceRoot":""}